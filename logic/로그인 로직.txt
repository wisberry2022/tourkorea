로그인 로직

1. 아이디, 비밀번호 입력 후 로그인 버튼 클릭
2. 백엔드에서 아이디, 비밀번호 받은 뒤 DB 조회하여 일치하는 아이디가 있는지 조회
	2-A. 일치하는 아이디가 없을 시
		2-A-1. 에러 객체 응답
	2-B. 일치하는 아이디가 있을 시
		2-B-1. bcrypt를 통해 비밀번호를 암호화한 후 DB에 저장된 것과 비교
			2-B-1-A. 비밀번호가 일치하지 않을 경우
				2-B-1-A-1. 에러 객체 응답
			2-B-1-B. 비밀번호가 일치할 경우
				2-B-1-B-1. 로그인 성공이라는 메세지와 함께 true값 반환
				2-B-1-B-2. jwt 토큰 발급 후 프론트단으로 access token 발급
3. jwt 토큰


로그인 유지 로직

1. 로그인 성공 후 백엔드에서 발급받은 jwt를 리덕스 스토어에 올려보낸다.
2. 리덕스에 저장한 로그인 여부 state를 필요한 곳에서 땡겨온다.

토큰 인증 로직
1. jwt 인증이 필요할 때, 리덕스 스토어에서 jwt를 받아온다.
2. 스토어에서 받은 jwt를 백엔드로 보내 검증을 진행한다.
	2-A. jwt가 유효하지 않을 경우
		2-A-1. logState:false가 담긴 응답 데이터를 전송한다.
		2-A-2. 백엔드에서 응답으로 받은 false값을 리덕스 스토어에 보내어 로그인 상태를 변경하고, jwt 토큰을 삭제한다.
	2-B. jwt가 유효할 경우
		2-B-1. logState:true가 담긴 응답 데이터를 전송한다.


useVerify 커스텀 훅 로직

0. 일반 컴포넌트에서 

